{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\M.E.C\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\M.E.C\\\\Desktop\\\\WebDev\\\\React\\\\NewProjects\\\\to-do-list\\\\src\\\\components\\\\InputArea.jsx\";\nimport React, { useState } from \"react\";\nfunction InputArea(props) {\n  // Child component state\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValue = _useState2[0],\n    setInputValue = _useState2[1];\n  function handleChange(event) {\n    var newValue = event.target.value;\n    setInputValue(newValue);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"text\",\n    value: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      props.onAddItem(inputValue); // onAddItem is tied to the addItem in app.jsx\n      setInputValue(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n}\nexport default InputArea;","map":{"version":3,"names":["React","useState","InputArea","props","inputValue","setInputValue","handleChange","event","newValue","target","value","onAddItem"],"sources":["C:/Users/M.E.C/Desktop/WebDev/React/NewProjects/to-do-list/src/components/InputArea.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction InputArea(props) {\n  // Child component state\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n  }\n\n  return (\n    <div className=\"form\">\n      <input onChange={handleChange} type=\"text\" value={inputValue} />\n      <button\n        onClick={() => {\n          props.onAddItem(inputValue); // onAddItem is tied to the addItem in app.jsx\n          setInputValue(\"\");\n        }}\n      >\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAAS,CAACC,KAAK,EAAE;EACxB;EAAA,gBACoCF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCG,UAAU;IAAEC,aAAa;EAEhC,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3B,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCL,aAAa,CAACG,QAAQ,CAAC;EACzB;EAEA,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnB;IAAO,QAAQ,EAAEF,YAAa;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAEF,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAChE;IACE,OAAO,EAAE,mBAAM;MACbD,KAAK,CAACQ,SAAS,CAACP,UAAU,CAAC,CAAC,CAAC;MAC7BC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SAAgB,CACT,CACL;AAEV;AAEA,eAAeH,SAAS"},"metadata":{},"sourceType":"module"}