{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","react_default","a","createElement","onClick","onChecked","id","text","InputArea","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","className","onChange","event","newValue","target","value","type","onAddItem","App","items","setItems","_useState3","_useState4","showGuide","setShowGuide","_useState5","_useState6","backgroundColor","setBackgroundColor","deleteItem","prevItems","filter","item","index","closeGuide","setTimeout","components_InputArea","inputText","concat","toConsumableArray","map","todoItem","components_ToDoItem","key","selectedColor","document","body","style","ReactDOM","render","components_App","getElementById"],"mappings":"kJAceA,MAZf,SAAkBC,GAChB,OACEC,EAAAC,EAAAC,cAAA,OACEC,QAAS,WACPJ,EAAMK,UAAUL,EAAMM,MAGxBL,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,QCiBFC,MAxBf,SAAmBR,GACjB,IAAAS,EACoCC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAzCK,EAAUH,EAAA,GAAEI,EAAaJ,EAAA,GAOhC,OACEV,EAAAC,EAAAC,cAAA,OAAKa,UAAU,QACbf,EAAAC,EAAAC,cAAA,SAAOc,SAPX,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAcI,IAKmBG,KAAK,OAAOD,MAAOP,IAClDb,EAAAC,EAAAC,cAAA,UACEC,QAAS,WACPJ,EAAMuB,UAAUT,GAChBC,EAAc,MAGhBd,EAAAC,EAAAC,cAAA,sBCuDOqB,MAvEf,WAAe,IAAAf,EACaC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BgB,EAAKd,EAAA,GAAEe,EAAQf,EAAA,GAAAgB,EACYjB,oBAAS,GAAKkB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACgBrB,mBAAS,WAAUsB,EAAApB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAA1DE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAY1C,SAASG,EAAW7B,GAClBoB,EAAS,SAACU,GACR,OAAOA,EAAUC,OAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUjC,MAKvB,SAASkC,IACPV,GAAa,GAMf,OAHAW,WAAWD,EAAY,KAKrBvC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,WACbf,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAACuC,EAAS,CAACnB,UAzBf,SAAiBoB,GACfjB,EAAS,SAACU,GAAS,SAAAQ,OAAAhC,OAAAiC,EAAA,EAAAjC,CAASwB,GAAS,CAAEO,SAyBrC1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGsB,EAAMqB,IAAI,SAACC,EAAUR,GAAK,OACzBtC,EAAAC,EAAAC,cAAC6C,EAAQ,CACPC,IAAKV,EACLjC,GAAIiC,EACJhC,KAAMwC,EACN1C,UAAW8B,QAKnBlC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,oBACbf,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKa,UAAU,gBACbf,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,QAAQD,MAAOY,EAAiBhB,SA/CpD,SAA2BC,GACzB,IAAMgC,EAAgBhC,EAAME,OAAOC,MACnC8B,SAASC,KAAKC,MAAMpB,gBAAkBiB,EACtChB,EAAmBgB,QA+ChBrB,GACC5B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cACbf,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,gEAEFF,EAAAC,EAAAC,cAAA,UAAQC,QAASoC,GAAW,YChEtCc,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAG,MAAKL,SAASM,eAAe","file":"static/js/main.2fd0c547.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\n\nfunction InputArea(props) {\n  // Child component state\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n  }\n\n  return (\n    <div className=\"form\">\n      <input onChange={handleChange} type=\"text\" value={inputValue} />\n      <button\n        onClick={() => {\n          props.onAddItem(inputValue); // onAddItem is tied to the addItem in app.jsx\n          setInputValue(\"\");\n        }}\n      >\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [showGuide, setShowGuide] = useState(true);\n  const [backgroundColor, setBackgroundColor] = useState(\"#54a0ff\"); \n\n  function handleColorChange(event) {\n    const selectedColor = event.target.value;\n    document.body.style.backgroundColor = selectedColor;\n    setBackgroundColor(selectedColor);\n  }\n\n  function addItem(inputText) {\n    setItems((prevItems) => [...prevItems, inputText]);\n  }\n\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n  \n  function closeGuide() {\n    setShowGuide(false);\n  }\n\n  setTimeout(closeGuide, 9000);\n\n\n  return (\n    \n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAddItem={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n      <div className=\"picker-container\">\n        <p>Color Picker:</p>\n        <div className=\"color-picker\">\n          <input type=\"color\" value={backgroundColor} onChange={handleColorChange} />\n        </div>\n      </div>\n      {showGuide && (\n        <div className=\"guide-card\">\n          <h2>App Usage Guide</h2>\n          <p>Instructions on how to use the app:</p>\n          <ul>\n            <li>Enter your to-do item in the input field.</li>\n            <li>Click add to add it to your list.</li>\n            <li>Click on the to-do item once you've completed it.</li>\n          </ul>\n          <button onClick={closeGuide}>Close</button>\n        </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}